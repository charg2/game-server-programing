서버는 C++과 윈도우의 IOCP를 사용해 서버 라이브러리를 만들고 확장하여 MMORPG 서버를 제작했습니다.
서버 시작 전 json 설정파일을 통해서 ip및 port 및 세부 설정을 동적으로 변경이 가능합니다.


현재 클라이언트로는 유니티로 만든 클라이언트를 사용하고 있습니다.
패킷 통신을 위해 직접 C#용 라이브러리를 제작하였습니다.
일반 소켓에 select모델을 사용하고 있습니다.
패킷 정의는 C#의 구조체를 사용하고 있습니다.


맵은 800 x 800 타일맵입니다. 
검색 효율을 위해 맵을 시야범위인 19 x 19 두배인 38 x 38로 잡아놨습니다.
맵에 장애물이 존재하고 유니티 클라이언트에서 한번 서버에서 또한번 충돌체크를 합니다. 


플레이어 캐릭터 입니다. 
공격시 공격 범위로는 ( 상 하 좌 우 자신 위치 5칸이 공격됩니다.)
주기적으로 10초당 10씩 회복이 됩니다.
체력이 0이되서 사망시 30초후 적당한 위치에서 부활합니다.

몬스터입니다. 
맵에 2만 마리의 몬스터가 존재하고 4종류의 몬스터로 나뉘어 집니다.
각 몬스터의 이름 스텟 정보 등은 서버 시작시 Lua script를 통해서 읽어옵니다.

로밍 속성을 가진 몬스터는 평소에 주변 랜덤방향으로 이동합니다.
후공 몬스터의 경우 자신을 공격한 플레이어를 타겟으로 잡아 추적합니다.
성공 몬스터의 경우 플레이어가 몬스터의 시야범위 안에 들면 범위에 든 플레이어를 
대상으로 하여 추적합니다.


몬스터의 추적의 경우 타겟의 경로까지 장애물이 없을시에는 간단한 계산으로 타겟을 쫓으며,
경로에 장애물이 있을시 AStar 알고리즘을 통해서 길을 찾습니다.

DB는 SQL Server에 ODBC 저장 프로시저를 사용하고 있습니다.
ID를 통한 로그인이 가능하며 인게임내의 각 플레이어의 정보도 저장하고 있습니다.


더미 프로그램으로 최대 9900명까지 접속제한을 해뒀습니다.
각각의 접속은 1개의 소켓으로 접속됩니다.
주기적으로 이동하고 있습니다.